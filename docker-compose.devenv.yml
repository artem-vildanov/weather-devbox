networks:
  weather-network:
    external: true

services:
  weather-devenv-db:
    image: postgres:latest
    container_name: weather-devenv-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: database
    ports:
      - "5432:5432"
    networks:
      - weather-network
    volumes:
      - devenv-db-data:/var/lib/postgresql/data

  # Wiki (например, используя Wiki.js)
  weather-wiki:
    image: requarks/wiki:latest
    container_name: weather-wiki
    environment:
      WIKI_ADMIN_EMAIL: admin@example.com
      WIKI_ADMIN_PASSWORD: password
      DB_TYPE: postgres
      DB_HOST: weather-devenv-db
      DB_PORT: 5432
      DB_USER: user
      DB_PASS: secret
      DB_NAME: database
    ports:
      - "3000:3000"
    networks:
      - weather-network
    volumes:
      - wiki-data:/var/lib/wiki

  # Gitea (для управления репозиториями и задачами)
  weather-gitea:
    image: gitea/gitea:latest
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - DB_TYPE=postgres
      - DB_HOST=weather-devenv-db
      - DB_PORT=5432
      - DB_NAME=database
      - DB_USER=user
      - DB_PASS=secret
    ports:
      - "3001:3000"
    networks:
      - weather-network
    volumes:
      - gitea-data:/data

  # Drone.io (для автоматизации CI/CD)
  weather-drone-server:
    image: drone/drone:latest
    container_name: drone-server
    environment:
      DRONE_GITEA_SERVER: http://gitea:3000
      DRONE_RPC_SECRET: supersecret
      DRONE_SERVER_HOST: localhost:3002
      DRONE_SERVER_PROTO: http
    ports:
      - "3002:80"
    networks:
      - weather-network
    volumes:
      - drone-data:/data
    depends_on:
      - weather-gitea

  # Drone.io агент (для выполнения пайплайнов)
  weather-drone-agent:
    image: drone/drone-runner-docker:latest
    container_name: drone-agent
    environment:
      DRONE_RPC_PROTO: http
      DRONE_RPC_HOST: drone-server:3002
      DRONE_RPC_SECRET: supersecret
      DRONE_RUNNER_CAPACITY: 2
    networks:
      - weather-network
    depends_on:
      - weather-drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Grafana (для визуализации данных)
  weather-grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    ports:
      - "3003:3000"
    networks:
      - weather-network
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  wiki-data:
  gitea-data:
  drone-data:
  grafana-data:
  devenv-db-data: